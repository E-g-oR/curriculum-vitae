---
import { SEO } from "astro-seo";
import { useTranslations } from "@i18n/utils";
const { lang } = Astro.params;
const t = useTranslations(Astro);
---

<!DOCTYPE html>
<html lang={lang}>
  <head>
    <meta charset={"UTF-8"} />
    <meta name={"description"} content={t.page.description} />
    <meta name={"viewport"} content="width=device-width" />
    <link rel={"icon"} type={"image/svg+xml"} href={"/favicon.svg"} />
    <meta name={"generator"} content={Astro.generator} />
    <title>{t.page.title}</title>
    <SEO
      title={t.page.title}
      description={t.page.description}
      noindex={true}
      nofollow={true}
      openGraph={{
        basic: {
          title: t.page.title,
          type: "image",
          image:
            "https://avatars.githubusercontent.com/u/68065928?s=400&u=f4f3e815cca7301706639d8ba32a6492aaea2cef&v=4",
        },
        optional: {
          description: t.page.description,
          locale: lang,
          siteName: t.page.title,
        },
      }}
    />
  </head>
  <body
    class="bg-gradient-to-br from-slate-50 dark:from-slate-800 to-slate-200 dark:to-slate-950 bg-no-repeat text-slate-800 dark:text-slate-100"
  >
    <!--<AppBar/>-->
    <div class="flex flex-col md:flex-row">
      <slot />
    </div>
    <script is:inline>
      const theme = (() => {
        if (
          typeof localStorage !== "undefined" &&
          localStorage.getItem("theme")
        ) {
          return localStorage.getItem("theme");
        }
        if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
          return "dark";
        }
        return "light";
      })();

      if (theme === "light") {
        document.documentElement.classList.remove("dark");
      } else {
        document.documentElement.classList.add("dark");
      }
      window.localStorage.setItem("theme", theme);
    </script>
  </body>
</html>
